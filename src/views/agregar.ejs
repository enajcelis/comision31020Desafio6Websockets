<!doctype html>
<html>
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
		<title>Desafío 6 - Websockets</title>
	</head>
	<body>
		<div class="container m-4 p-3 mb-3 bg-light text-dark">
			<h2 class="text-center">Desafío 6 - Websockets</h2><br>

			<div class="row">
				<h5>Agregar producto</h5>
			</div>

			<div class="row">
				<form class="row g-3" method="post" id="addProductForm">
					<div class="col-12">
						<label for="title" class="form-label">Nombre</label>
						<input type="text" class="form-control" name="title" id="title" required>
					</div>
					<div class="col-12">
						<label for="price" class="form-label">Precio</label>
						<div class="input-group has-validation">
							<span class="input-group-text" id="inputGroupPrepend">$</span>
							<input type="text" class="form-control" name="price" id="price" aria-describedby="inputGroupPrepend" required>
						</div>		
					</div>
					<div class="col-12">
						<label for="thumbnail" class="form-label">Foto (URL)</label>
						<input type="url" class="form-control" name="thumbnail" id="thumbnail" placeholder="http://example.com" required>
					</div>
					<div class="col-12">
						<button type="submit" class="btn btn-primary">Guardar</button>
					</div>
				</form>
			</div>

			<div class="row">
				<div class="row g-3 p-3" id="productos"></div>
			</div>
		</div>

		<div class="container m-4 p-3 mb-3 bg-light text-dark">
			<div class="row">
				<h5>Centro de Mensajes</h5>
			</div>

			<div class="row mb-3">
				<div class="col-6">
					<input type="text" class="form-control" id="email" placeholder="Escribe aquí tu correo electrónico">
				</div>				
			</div>

			<hr>
			<div class="row" id="log"></div>

			<div class="row">
				<div class="col-8">
					<input type="eail" class="form-control" id="chatBox" placeholder="Ingresa tu mensaje y presiona enter para enviar..." required>
				</div>
			</div>			
	
			<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script> 
			<script src="/socket.io/socket.io.js"></script>
			<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js" integrity="sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
			<script>
				let socket = io();
				let email = document.getElementById('email');
				let log = document.getElementById('log');
				let form = document.getElementById('addProductForm');
				let divProductos = document.getElementById('productos');

				/* LISTADO INICIAL DE PRODUCTOS */
				(function() {
					fetch('/api/productos',{ 
						method: 'GET', 
						headers: {
							"Content-Type": "application/json"
						} 
					})
					.then(response => response.json())
					.then(data => {
						let listProducts = `
						<div class="row">
							<table class="table table-dark table-responsive">
								<thead>
									<tr>
										<th scope="col">Nombre</th>
										<th scope="col">Precio</th>
										<th scope="col">Foto</th>
									</tr>
								</thead>
								<tbody>
						`;
						data.forEach(producto => {
							listProducts = listProducts + `
							<tr>
								<td>${producto.title}</td>
								<td>$${producto.price}</td>
								<td>
									<a href="${producto.thumbnail}" target="_blank">
										<img src="${producto.thumbnail}" class="rounded img-thumbnail" style="width: 200px">
									</a>
								</td>
							</tr>
							`;
						});
						divProductos.innerHTML = listProducts + `
								</tbody>
							</table>
						</div>`;						
					});			
				})();

				/* EVENTOS DE SOCKETS */
				socket.on('producto', data => {	
					let listProducts = `
					<div class="row">
						<table class="table table-dark table-responsive">
							<thead>
								<tr>
									<th scope="col">Nombre</th>
									<th scope="col">Precio</th>
									<th scope="col">Foto</th>
								</tr>
							</thead>
							<tbody>
					`;
					data.forEach(producto => {
						listProducts = listProducts + `
						<tr>
							<td>${producto.title}</td>
							<td>$${producto.price}</td>
							<td>
								<a href="${producto.thumbnail}" target="_blank">
									<img src="${producto.thumbnail}" class="rounded img-thumbnail" style="width: 200px">
								</a>
							</td>
						</tr>
						`;
					});
					divProductos.innerHTML = listProducts + `
							</tbody>
						</table>
					</div>`;
				});

				socket.on('log', data => {	
					let messages = "";
					data.forEach(log => {
						messages = messages + `
							<p>
								<span style="color:blue"><strong>${log.user}</strong></span>
								<span style="color:brown">[${log.date} ${log.time}]</span> : 
								<span style="color:green">${log.message}</span>
							</p>							
						`;
					});
					log.innerHTML = messages;
				});

				/* EVENTOS DEL CHAT */
				chatBox.addEventListener('keyup', evt => {
					if(evt.key === "Enter"){
						if(email.value.trim().length > 0){	
							if(chatBox.value.trim().length > 0){
								socket.emit('message', {
									user: email.value.trim(), 
									message: chatBox.value.trim(), 
									date: moment().format('DD/MM/YYYY'), 
									time: moment().format('HH:mm')
								});
								chatBox.value = "";
							}
						}else{
							chatBox.value = "";

							/* ALERT EMAIL */
							Swal.fire({
								icon: 'error',
								title: 'Oops...',
								text: '¡Necesitas escribir tu correo electrónico para participar!',
							});
						}							
					}
				});

				/* EVENTOS DE PRODUCTOS */
				form.addEventListener('submit', (evt) => { 
					evt.preventDefault(); 
					let data = new FormData(form);
					let obj = {};
					data.forEach((value,key) => obj[key] = value); 
					
					// Post producto
					fetch('/api/productos',{ 
						method: 'POST', 
						body: JSON.stringify(obj),
						headers: {
							"Content-Type": "application/json"
						} 
					})
					.then(response => response.json())
					.then(data => {
						socket.emit('newProduct', {
							id: data.product.id,
							title: data.product.title, 
							price: data.product.price, 
							thumbnail: data.product.thumbnail, 
						});

						form.reset();
					});
				});
			</script>
		</div>
	</body>
</html>